using Datagrammer.Quic.Protocol.Tls;
using System;
using System.Text;
using Xunit;

namespace Tests.Tls
{
    public class SignatureSchemeCertificateTests
    {
        [Fact]
        public void CreatePublicCertificate_FromPfx_RSA_PKCS1_SHA256_ResultIsExpected()
        {
            //Arrange
            var pfxData = GetPfxCertificateHexData();
            var expectedData = GetPublicCertificateHexData();

            using var privateCertificate = SignatureScheme.RSA_PKCS1_SHA256.CreatePrivateCertificatePfx(Utils.ParseHexString(pfxData.Hex), pfxData.Password);

            //Act
            var buffer = new byte[TlsBuffer.MaxRecordSize];
            var cursor = buffer.AsSpan();

            privateCertificate.WritePublic(ref cursor);

            Array.Resize(ref buffer, buffer.Length - cursor.Length);

            //Assert
            Assert.Equal(expectedData, Utils.ToHexString(buffer), true);
        }

        [Fact]
        public void SignHash_FromPfx_RSA_PKCS1_SHA256_ResultIsExpected()
        {
            //Arrange
            var pfxData = GetPfxCertificateHexData();
            var signatureData = GetSignatureHexData();
            var dataToSign = GetContentBytes();

            var hash = SignatureScheme.RSA_PKCS1_SHA256.GetHash();
            using var privateCertificate = SignatureScheme.RSA_PKCS1_SHA256.CreatePrivateCertificatePfx(Utils.ParseHexString(pfxData.Hex), pfxData.Password);

            //Act
            var buffer = new byte[TlsBuffer.MaxRecordSize];
            var cursor = buffer.AsSpan();
            var hashToSign = hash.CreateHash(dataToSign).ToArray();

            privateCertificate.SignHash(hashToSign, ref cursor);

            Array.Resize(ref buffer, buffer.Length - cursor.Length);

            //Assert
            Assert.Equal(signatureData, Utils.ToHexString(buffer), true);
        }

        [Fact]
        public void VerifyHash_RSA_PKCS1_SHA256_True()
        {
            //Arrange
            var certificateData = GetPublicCertificateHexData();
            var signatureData = GetSignatureHexData();
            var dataToSign = GetContentBytes();

            var hash = SignatureScheme.RSA_PKCS1_SHA256.GetHash();
            using var publicCertificate = SignatureScheme.RSA_PKCS1_SHA256.CreatePublicCertificate(Utils.ParseHexString(certificateData));

            //Act
            var hashToVerify = hash.CreateHash(dataToSign).ToArray();
            var result = publicCertificate.VerifyHash(hashToVerify, Utils.ParseHexString(signatureData));

            //Assert
            Assert.True(result);
        }

        private (string Hex, string Password) GetPfxCertificateHexData()
        {
            return
        }

        private string GetPublicCertificateHexData()
        {
            return
        }

        public string GetSignatureHexData()
        {
            return "171F00E23150ACC17270B3D517F0388E3E3D302F898AD5502D68BE842C1135C7F4293937434B59EA88C758A36C441CA153E3BB985A03AE73B42D5F12F9432E1B2B48F93B6B76C3852A98A665BF595B2A3E3320730BAAC6E03E46D4B34E4C0FD3ED99D6FA7F6ECAEE5D78A67DD0973B28F536DDF203106ABA7CBBE6AC4AEAA5C8B626C2AD2EA34D8D4F7F10B6632AA801DB9D4131139478977C76C98DB1083368F167A4BC046EC13ED3B8735328860DB4B4659BAEF0CC47738D3A611FFFD0020ECA62A6B6EB58E20D5A9F38D6DBB01B78311C52A82D125791A4F2293BFC939FE1309A9ED5EFA8897A69965065DDAF7A4E717538E9F28A267EDFA697D421A3FD6AF43A34DD6B1EDFD15DF94AAF2EF24D60BBB83FF41077E2D14C6D2ADEFFFD9B66377160F72CD9C4D07CB904A8A8BD0873636C0634CB9D967DECEE65EBCD7F5A023C1E8BB68E692289406B7C54B06354F71EAB4904B5B1009CF125048BFBEB419F00A25F5F8CCAB2B131CE686F2F463EA0371477586489AC7C4A2640F602D662D08103D9E8ADDAA05DE0919FE792B597F1CC48C67FB47E61F2B2F17E2544CCAE832D188D96BE1078E6B92F846DA277DB3ABCF85F69E4D179C1819CC1F6C36219E0C8CD5E1A56D77219DB5449A02FFB6A0A80377818BEB907CC1A336557DF2CEE0C2743898F1E615E7D9DD4C94E19862B2401EA4DD67A27C45B8C98FF9071EB89B3";
        }

        public byte[] GetContentBytes()
        {
            return Encoding.UTF8.GetBytes("test text to hash");
        }
    }
}
